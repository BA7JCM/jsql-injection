name: Run tests on Docker

on:
  push:
    branches: [ master ]
    
env:
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  MAVEN_NASHORN: ""

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
        - jdk: 3.8.1-jdk-11-slim
          nashorn: -Dnashorn.args=--no-deprecation-warning
        - jdk: 3.8.6-eclipse-temurin-18
          nashorn: ""
    env:
      JSQL_DOCKERFILE: ${{ matrix.jdk }}
      MAVEN_NASHORN: ${{ matrix.nashorn }}
      PATH_DOCKER: ./model/src/test/resources/docker
      PATH_SCRIPTS: ./model/src/test/resources/docker/scripts

    steps:
    
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        # Disable shallow clone to send Git blame to Sonar
        fetch-depth: 0
    
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: 14
    
    - name: Set Maven dependencies cache
      uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-
              
    - name: Install Maven dependencies
      run: mvn clean install -DskipTests dependency:tree
        
    - name: Build and start databases
      run: |
        docker-compose -f $PATH_DOCKER/docker-compose.yml build --parallel
        docker-compose -f $PATH_DOCKER/docker-compose.yml up -d

#        $PATH_SCRIPTS/healthcheck/healthcheck.sh
#        $PATH_SCRIPTS/buff.sh
#        $PATH_SCRIPTS/verify.sh
        
    - name: Build project container
      run: docker build -t jsql:latest --build-arg JSQL_DOCKERFILE -f model/src/test/resources/docker/Dockerfile.jsql .

    - name: Run Maven unit and integration tests
      # mvn install for
      run: $PATH_SCRIPTS/run-on-docker.sh 'mvn clean install -P jsql -DskipITs'

#    - name: Display database stats
#      run: $PATH_SCRIPTS/verify.sh

    - name: Scan Sonar
      run: $PATH_SCRIPTS/run-on-docker.sh '(ls ; ls /report-aggregate-module/target/site/jacoco-aggregate ; cd report-aggregate-module ; mvn sonar:sonar)'

    - name: Scan Codecov
      run: $PATH_SCRIPTS/run-on-docker.sh '(bash <(curl -s https://codecov.io/bash) || true)'

    - name: Scan Codacy
      run: $PATH_SCRIPTS/run-on-docker.sh '(bash <(curl -Ls https://coverage.codacy.com/get.sh report) || true)'

  codeql:
    name: CodeQL scan
    uses: ./.github/workflows/run-codeql.yml

  crda:
    name: CodeReady scan
    uses: ./.github/workflows/run-codeready.yml
    secrets: inherit