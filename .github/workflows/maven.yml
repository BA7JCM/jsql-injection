name: Run tests on Docker

on:
  push:
    branches: [ master ]
    
env:
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  MAVEN_NASHORN: ""
  DOCKER_RESOURCES: ./model/src/test/resources/docker

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
        - jdk: 3.8.1-jdk-11-slim
          nashorn: -Dnashorn.args=--no-deprecation-warning
        - jdk: 3.8.6-eclipse-temurin-18
          nashorn: ""
    env:
      JSQL_DOCKERFILE: ${{ matrix.jdk }}
      MAVEN_NASHORN: ${{ matrix.nashorn }}

    steps:
    
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        distribution: temurin
        java-version: 18
    
    - name: Set Maven dependencies cache
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-
              
    - name: Install Maven dependencies
      run: mvn clean install -DskipTests dependency:tree
        
    - name: Build and start databases
      run: |
        docker-compose -f $DOCKER_RESOURCES/docker-compose.yml build --parallel
        docker-compose -f $DOCKER_RESOURCES/docker-compose.yml up -d

    - name: Database health checks and configuration
      run: |
        $DOCKER_RESOURCES/scripts/healthcheck/healthcheck.sh
        $DOCKER_RESOURCES/scripts/buff.sh
        $DOCKER_RESOURCES/scripts/verify.sh
        
    - name: Build project container
      run: docker build -t jsql:latest --build-arg JSQL_DOCKERFILE -f $DOCKER_RESOURCES/Dockerfile.jsql .

    - name: Run Maven unit tests and integration tests with Sonar scan
      # Profile usage for skipITs/skipTests (env var MAVEN_OPS not working)
      # Note: 'mvn sonar:sonar' not working, modules reports not found, use 'mvn verify sonar:sonar' for reliability
      # Note: gh actions sonarsource/sonarqube-scan-action not working properly => analysis not reliable
      run: $DOCKER_RESOURCES/scripts/run-on-docker.sh 'mvn clean install sonar:sonar -P tests'

    - name: Show databases stats after integration tests
      run: $DOCKER_RESOURCES/scripts/verify.sh

    - name: Copy files and coverage reports from container
      # Sonar scans unmerged reports, Codacy/Codecov requires scanning each files (or reports merged)
      run: |
        mkdir -p shared-resources/model shared-resources/view
        docker cp docker_jsql-container:view/. shared-resources/view
        docker cp docker_jsql-container:model/. shared-resources/model
        docker cp docker_jsql-container:pom.xml shared-resources

    - name: Codecov scan
      run: cd shared-resources && bash <(curl -s https://codecov.io/bash) || true

    - name: Codacy scan
      run: cd shared-resources && bash <(curl -Ls https://coverage.codacy.com/get.sh) || true

  codeql:
    name: CodeQL scan
    uses: ./.github/workflows/run-codeql.yml

  crda:
    name: CodeReady scan
    uses: ./.github/workflows/run-codeready.yml
    secrets: inherit

  release:
    needs: [codeql, crda, build]
    name: Publish release
    uses: ./.github/workflows/release.yml
    secrets: inherit