on:
  workflow_call:
    inputs:
      DOCKER_RESOURCES:
        type: string
        required: true

jobs:

  build-jdk11:
    name: Test view on Docker
    runs-on: ubuntu-latest
    env:
      JSQL_DOCKERFILE: 3.8.1-jdk-11-slim
      MAVEN_NASHORN: -Dnashorn.args=--no-deprecation-warning
      MAVEN_BYTEBUDDY: ""
      DOCKER_RESOURCES: ${{ inputs.DOCKER_RESOURCES }}
    steps:

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Disable shallow clone to prevent Sonar warning
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 18

      - name: Set Maven dependencies cache
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Install Maven dependencies
        run: mvn clean install -DskipTests dependency:tree

      - name: Send to VirusTotal
        run: |
          for i in {1..3}; do
            curl -X POST 'https://www.virustotal.com/api/v3/files' \
            -H 'x-apikey: ${{ secrets.VT_API_KEY }}' \
            -F 'file=@view-v0.106-jar-with-dependencies.jar' && break || sleep 10;
          done        

      - name: VirusTotal scan
        uses: crazy-max/ghaction-virustotal@v4
        with:
          vt_api_key: ${{ secrets.VT_API_KEY }}
          files: '**/view-v*-jar-with-dependencies.jar'

      - name: Build project container
        run: docker build -t jsql:latest --build-arg JSQL_DOCKERFILE -f $DOCKER_RESOURCES/Dockerfile.jsql .

      - name: Unit tests
        run: $DOCKER_RESOURCES/scripts/run-on-docker-no-network.sh 'cd view/ && mvn clean install -P tests'