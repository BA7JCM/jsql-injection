on:
  workflow_call:
    inputs:
      DOCKER_RESOURCES:
        type: string
        required: true

jobs:

  build-jdk11:
    name: Test view on Docker
    runs-on: ubuntu-latest
    env:
      JSQL_DOCKERFILE: 3.8.1-jdk-11-slim
      MAVEN_NASHORN: -Dnashorn.args=--no-deprecation-warning
      MAVEN_BYTEBUDDY: ""
      DOCKER_RESOURCES: ${{ inputs.DOCKER_RESOURCES }}
    steps:

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Disable shallow clone to prevent Sonar warning
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 18

      - name: Set Maven dependencies cache
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Install Maven dependencies
        run: mvn clean install -DskipTests dependency:tree

      - name: Upload to VirusTotal
        id: upload
        run: |
          PATH_JAR="$(find . -name '*-jar-with-dependencies.jar' -type f)"
          echo "PATH_JAR=$PATH_JAR"
          for i in {1..3}; do
            response=$(
              curl -X POST 'https://www.virustotal.com/api/v3/files' \
              -H "x-apikey: ${{ secrets.VT_API_KEY }}" \
              -F 'file=@'$PATH_JAR
            )
            echo "VirusTotal response: $response"
            analysis_id=$(echo $response | jq -r '.data.id' || echo "")
            if [ -n "$analysis_id" ]; then
              echo "analysis_id=$analysis_id" >> $GITHUB_OUTPUT
              break
            fi
            sleep 30
          done

      - name: Check VirusTotal Report
        run: |
          analysis_id=${{ steps.upload.outputs.analysis_id }}
          for i in {1..10}; do
            response=$(
              curl -X GET "https://www.virustotal.com/api/v3/analyses/$analysis_id" \
              -H "x-apikey: ${{ secrets.VT_API_KEY }}"
            )
            echo "VirusTotal response: $response"
            status=$(echo $response | jq -r '.data.attributes.status')
            if [ "$status" == "completed" ]; then
              malicious=$(echo $response | jq -r '.data.attributes.stats.malicious')
              if [ "$malicious" -gt 0 ]; then
                echo "Malicious file detected!"
                exit 1
              else
                echo "File is clean."
                exit 0
              fi
            fi
            sleep 30
          done
          echo "VirusTotal report not completed in time."
          exit 1

      - name: Build project container
        run: docker build -t jsql:latest --build-arg JSQL_DOCKERFILE -f $DOCKER_RESOURCES/Dockerfile.jsql .

      - name: Unit tests
        run: $DOCKER_RESOURCES/scripts/run-on-docker-no-network.sh 'cd view/ && mvn clean install -P tests'